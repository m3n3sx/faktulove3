version: '3.8'

services:
  # Main Django application with PaddleOCR support
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: faktulove-web-paddleocr
    restart: unless-stopped
    environment:
      # Django configuration
      - DJANGO_SETTINGS_MODULE=faktulove.settings
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=false
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      
      # Database configuration
      - DATABASE_URL=postgresql://faktulove_user:faktulove_password@postgres:5432/faktulove_db
      
      # Redis configuration
      - REDIS_URL=redis://redis:6379/0
      
      # PaddleOCR configuration
      - PADDLEOCR_ENABLED=true
      - PADDLEOCR_PRIMARY=true
      - USE_PADDLEOCR=true
      - PADDLEOCR_USE_GPU=false
      - PADDLEOCR_LANGUAGES=pl,en
      - PADDLEOCR_MAX_MEMORY=800
      - PADDLEOCR_MAX_WORKERS=2
      - PADDLEOCR_BATCH_SIZE=1
      - PADDLEOCR_FALLBACK_ENABLED=true
      - PADDLEOCR_MEMORY_OPTIMIZATION=basic
      - PADDLEOCR_MODEL_CACHING=true
      - PADDLEOCR_PERFORMANCE_MONITORING=true
      - PADDLEOCR_PREPROCESSING_ENABLED=true
      - PADDLEOCR_POLISH_OPTIMIZATION=true
      - PADDLEOCR_CONFIDENCE_BOOSTING=true
      - PADDLEOCR_SPATIAL_ANALYSIS=true
      - PADDLEOCR_FALLBACK_HANDLING=true
      - PADDLEOCR_TIMEOUT_STRATEGY=graceful
      - PADDLEOCR_TIMEOUT_DEGRADATION=true
      
      # OCR engine priority
      - OCR_ENGINE_PRIORITY=paddleocr,tesseract,easyocr
      
      # Performance tuning
      - OMP_NUM_THREADS=2
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    
    volumes:
      - ./media:/app/media
      - paddle_models:/app/paddle_models
      - ocr_cache:/app/.ocr_cache
      - ocr_result_cache:/app/.ocr_result_cache
      - ./logs:/app/logs
    
    ports:
      - "8000:8000"
    
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    # Resource allocation
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '1.0'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    
    networks:
      - paddleocr-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: faktulove-postgres-paddleocr
    restart: unless-stopped
    environment:
      POSTGRES_DB: faktulove_db
      POSTGRES_USER: faktulove_user
      POSTGRES_PASSWORD: faktulove_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U faktulove_user -d faktulove_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paddleocr-network

  # Redis for caching and task queuing
  redis:
    image: redis:7-alpine
    container_name: faktulove-redis-paddleocr
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paddleocr-network

  # PaddleOCR dedicated worker
  paddleocr_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: faktulove-paddleocr-worker
    restart: unless-stopped
    command: celery -A faktulove worker -l info -Q paddleocr,paddleocr_batch --concurrency=1 --prefetch-multiplier=1
    environment:
      # Django configuration
      - DJANGO_SETTINGS_MODULE=faktulove.settings
      - SECRET_KEY=${SECRET_KEY}
      
      # Database and Redis
      - DATABASE_URL=postgresql://faktulove_user:faktulove_password@postgres:5432/faktulove_db
      - REDIS_URL=redis://redis:6379/0
      
      # PaddleOCR optimized configuration for worker
      - PADDLEOCR_ENABLED=true
      - PADDLEOCR_PRIMARY=true
      - USE_PADDLEOCR=true
      - PADDLEOCR_USE_GPU=false
      - PADDLEOCR_LANGUAGES=pl,en
      - PADDLEOCR_MAX_MEMORY=1200
      - PADDLEOCR_MAX_WORKERS=1
      - PADDLEOCR_BATCH_SIZE=1
      - PADDLEOCR_FALLBACK_ENABLED=true
      - PADDLEOCR_MEMORY_OPTIMIZATION=aggressive
      - PADDLEOCR_MODEL_CACHING=true
      - PADDLEOCR_PERFORMANCE_MONITORING=true
      - PADDLEOCR_PREPROCESSING_ENABLED=true
      - PADDLEOCR_POLISH_OPTIMIZATION=true
      - PADDLEOCR_CONFIDENCE_BOOSTING=true
      - PADDLEOCR_SPATIAL_ANALYSIS=true
      - PADDLEOCR_FALLBACK_HANDLING=true
      - PADDLEOCR_TIMEOUT_STRATEGY=graceful
      - PADDLEOCR_TIMEOUT_DEGRADATION=true
      - PADDLEOCR_DEBUG_MODE=false
      
      # Performance optimization
      - PADDLEOCR_CPU_OPTIMIZATION=medium
      - PADDLEOCR_MEMORY_CLEANUP_INTERVAL=300
      - PADDLEOCR_MODEL_CACHE_TTL=3600
      - PADDLEOCR_ENABLE_BATCH_PROCESSING=false
      - PADDLEOCR_ASYNC_PROCESSING=true
      
      # System optimization
      - OMP_NUM_THREADS=2
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    
    volumes:
      - ./media:/app/media
      - paddle_models:/app/paddle_models
      - ocr_cache:/app/.ocr_cache
      - ocr_result_cache:/app/.ocr_result_cache
      - ./logs:/app/logs
    
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    # Dedicated resources for PaddleOCR processing
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "celery", "-A", "faktulove", "inspect", "ping"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 180s
    
    networks:
      - paddleocr-network

  # General Celery worker for other tasks
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: faktulove-celery-worker
    restart: unless-stopped
    command: celery -A faktulove worker -l info -Q ocr,cleanup,monitoring --concurrency=2
    environment:
      - DJANGO_SETTINGS_MODULE=faktulove.settings
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://faktulove_user:faktulove_password@postgres:5432/faktulove_db
      - REDIS_URL=redis://redis:6379/0
      - PADDLEOCR_ENABLED=true
      - USE_PADDLEOCR=true
    volumes:
      - ./media:/app/media
      - paddle_models:/app/paddle_models
      - ocr_cache:/app/.ocr_cache
      - ocr_result_cache:/app/.ocr_result_cache
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
    networks:
      - paddleocr-network

  # Celery Beat scheduler
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: faktulove-celery-beat
    restart: unless-stopped
    command: celery -A faktulove beat -l info
    environment:
      - DJANGO_SETTINGS_MODULE=faktulove.settings
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://faktulove_user:faktulove_password@postgres:5432/faktulove_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - paddleocr-network

  # Flower for Celery monitoring
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: faktulove-flower
    restart: unless-stopped
    command: celery -A faktulove flower --port=5555
    environment:
      - DJANGO_SETTINGS_MODULE=faktulove.settings
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - paddleocr-network

  # PaddleOCR Performance Monitor
  paddleocr_monitor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: faktulove-paddleocr-monitor
    restart: unless-stopped
    command: python manage.py paddleocr_monitor
    environment:
      - DJANGO_SETTINGS_MODULE=faktulove.settings
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://faktulove_user:faktulove_password@postgres:5432/faktulove_db
      - REDIS_URL=redis://redis:6379/0
      - PADDLEOCR_PERFORMANCE_MONITORING=true
      - PADDLEOCR_METRICS_COLLECTION=true
    volumes:
      - ./logs:/app/logs
      - paddle_models:/app/paddle_models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    networks:
      - paddleocr-network

# Network configuration
networks:
  paddleocr-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# Persistent volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  paddle_models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./paddle_models
  ocr_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./.ocr_cache
  ocr_result_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./.ocr_result_cache
# Generated by Django 4.2.23 on 2025-08-23 01:42

import datetime
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('faktury', '0019_merge_20250823_0139'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnhancedFaktura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ_dokumentu', models.CharField(choices=[('FV', 'Faktura VAT'), ('FVS', 'Faktura VAT Sprzedażowa'), ('FVK', 'Faktura VAT Kosztowa'), ('FP', 'Faktura Pro Forma'), ('KOR', 'Faktura Korygująca'), ('KP', 'Korekta Pozytywna'), ('KN', 'Korekta Negatywna'), ('FZ', 'Faktura Zaliczkowa'), ('FK', 'Faktura Końcowa'), ('FO', 'Faktura Ostateczna'), ('FA', 'Faktura Abonamentowa'), ('RC', 'Rachunek'), ('PAR', 'Paragon Fiskalny'), ('WZ', 'Wydanie Zewnętrzne'), ('KW', 'Korekta WZ'), ('KP_DOK', 'KP - Dokument Kasowy Przychodowy'), ('KW_DOK', 'KW - Dokument Kasowy Rozchodowy'), ('WB', 'Wyciąg Bankowy'), ('NOT', 'Nota księgowa'), ('DU', 'Dowód Uznania'), ('DO', 'Dowód Obciążenia'), ('WDT', 'Faktura WDT (wewnątrzwspólnotowa dostawa)'), ('IMP', 'Faktura Importowa'), ('EXP', 'Faktura Eksportowa')], default='FV', max_length=10, verbose_name='Typ dokumentu')),
                ('numer', models.CharField(max_length=100, verbose_name='Numer dokumentu')),
                ('numer_wewnetrzny', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numer wewnętrzny')),
                ('data_wystawienia', models.DateField(default=datetime.date.today, verbose_name='Data wystawienia')),
                ('data_sprzedazy', models.DateField(verbose_name='Data sprzedaży/wykonania')),
                ('data_dostawy', models.DateField(blank=True, null=True, verbose_name='Data dostawy')),
                ('miejsce_wystawienia', models.CharField(max_length=255, verbose_name='Miejsce wystawienia')),
                ('wystawca', models.CharField(blank=True, max_length=255, null=True, verbose_name='Osoba wystawiająca')),
                ('odbiorca', models.CharField(blank=True, max_length=255, null=True, verbose_name='Osoba odbierająca')),
                ('typ_transakcji', models.CharField(choices=[('krajowa', 'Transakcja krajowa'), ('uew', 'Transakcja wewnątrzwspólnotowa UE'), ('eksport', 'Eksport (poza UE)'), ('import', 'Import'), ('trójstronna', 'Transakcja trójstronna'), ('usługa_odwrotne', 'Usługa z odwrotnym obciążeniem')], default='krajowa', max_length=20, verbose_name='Typ transakcji')),
                ('zwolnienie_z_vat', models.BooleanField(default=False, verbose_name='Zwolniona z VAT')),
                ('powod_zwolnienia', models.CharField(blank=True, choices=[('art43_1', 'Art. 43 ust. 1 - mały podatnik'), ('art43_2', 'Art. 43 ust. 2 - działalność nieopodatkowana'), ('art113_1', 'Art. 113 ust. 1 - limit 200 tys. PLN'), ('art113_9', 'Art. 113 ust. 9 - limit 50 tys. EUR'), ('art82', 'Art. 82 ust. 3 - rozporządzenie MF'), ('art100', 'Art. 100 - dostawa wewnątrzwspólnotowa'), ('art15', 'Art. 15 - działalność w interesie publicznym')], max_length=20, null=True, verbose_name='Podstawa prawna zwolnienia')),
                ('sposob_platnosci', models.CharField(choices=[('gotowka', 'Gotówka'), ('przelew', 'Przelew bankowy'), ('karta', 'Karta płatnicza'), ('blik', 'BLIK'), ('paypal', 'PayPal'), ('pobranie', 'Za pobraniem'), ('czek', 'Czek'), ('weksel', 'Weksel'), ('kompensata', 'Kompensata'), ('dotacja', 'Dotacja/Refundacja')], default='przelew', max_length=20, verbose_name='Sposób płatności')),
                ('termin_platnosci', models.DateField(verbose_name='Termin płatności')),
                ('numer_konta_bankowego', models.CharField(blank=True, max_length=34, null=True, verbose_name='Numer konta bankowego')),
                ('swift_bic', models.CharField(blank=True, max_length=11, null=True, verbose_name='Kod SWIFT/BIC')),
                ('bank_nazwa', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nazwa banku')),
                ('tytul_przelewu', models.TextField(blank=True, null=True, verbose_name='Tytuł przelewu')),
                ('waluta', models.CharField(choices=[('PLN', 'Polski złoty'), ('EUR', 'Euro'), ('USD', 'Dolar amerykański'), ('GBP', 'Funt brytyjski'), ('CHF', 'Frank szwajcarski'), ('CZK', 'Korona czeska'), ('NOK', 'Korona norweska'), ('SEK', 'Korona szwedzka')], default='PLN', max_length=3, verbose_name='Waluta')),
                ('kurs_waluty', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Kurs waluty')),
                ('data_kursu', models.DateField(blank=True, null=True, verbose_name='Data kursu waluty')),
                ('tabela_kursow', models.CharField(blank=True, max_length=10, null=True, verbose_name='Tabela kursów NBP')),
                ('status', models.CharField(choices=[('projekt', 'Projekt'), ('wystawiona', 'Wystawiona'), ('wyslana', 'Wysłana'), ('dostarczona', 'Dostarczona'), ('oplacona', 'Opłacona'), ('cz_oplacona', 'Częściowo opłacona'), ('przeterminowana', 'Przeterminowana'), ('anulowana', 'Anulowana'), ('skorygowana', 'Skorygowana'), ('zaksiegowana', 'Zaksięgowana')], default='wystawiona', max_length=20, verbose_name='Status')),
                ('kwota_oplacona', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Kwota opłacona')),
                ('rabat_procentowy_globalny', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Rabat procentowy globalny')),
                ('rabat_kwotowy_globalny', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rabat kwotowy globalny')),
                ('kasa', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numer kasy fiskalnej')),
                ('nr_paragonu_fiskalnego', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numer paragonu fiskalnego')),
                ('uwagi', models.TextField(blank=True, null=True, verbose_name='Uwagi')),
                ('uwagi_wewnetrzne', models.TextField(blank=True, null=True, verbose_name='Uwagi wewnętrzne')),
                ('data_utworzenia', models.DateTimeField(auto_now_add=True)),
                ('data_modyfikacji', models.DateTimeField(auto_now=True)),
                ('czy_wydrukowana', models.BooleanField(default=False)),
                ('czy_wyslana_email', models.BooleanField(default=False)),
                ('jpk_kod_pozycji', models.CharField(blank=True, max_length=10, null=True, verbose_name='Kod pozycji JPK_VAT')),
            ],
            options={
                'verbose_name': 'Faktura Enhanced',
                'verbose_name_plural': 'Faktury Enhanced',
                'ordering': ['-data_wystawienia', '-numer'],
            },
        ),
        migrations.CreateModel(
            name='EnhancedPozycjaFaktury',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lp', models.PositiveIntegerField(verbose_name='Lp.')),
                ('nazwa', models.CharField(max_length=500, verbose_name='Nazwa towaru/usługi')),
                ('kod_towaru', models.CharField(blank=True, max_length=50, null=True, verbose_name='Kod towaru')),
                ('pkwiu', models.CharField(blank=True, max_length=20, null=True, verbose_name='Kod PKWiU')),
                ('ilosc', models.DecimalField(decimal_places=4, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ilość')),
                ('jednostka', models.CharField(choices=[('szt', 'sztuka'), ('kg', 'kilogram'), ('g', 'gram'), ('t', 'tona'), ('l', 'litr'), ('ml', 'mililitr'), ('m', 'metr'), ('cm', 'centymetr'), ('mm', 'milimetr'), ('km', 'kilometr'), ('m2', 'metr kwadratowy'), ('m3', 'metr sześcienny'), ('godz', 'godzina'), ('min', 'minuta'), ('dzień', 'dzień'), ('mies', 'miesiąc'), ('rok', 'rok'), ('usł', 'usługa'), ('kpl', 'komplet'), ('par', 'para'), ('op', 'opakowanie'), ('proc', 'procent'), ('pkt', 'punkt'), ('inne', 'inne')], default='szt', max_length=10, verbose_name='Jednostka miary')),
                ('cena_netto', models.DecimalField(decimal_places=4, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cena jednostkowa netto')),
                ('rabat', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rabat')),
                ('rabat_typ', models.CharField(blank=True, choices=[('procent', 'Procent'), ('kwota', 'Kwota')], max_length=10, null=True, verbose_name='Typ rabatu')),
                ('vat', models.CharField(choices=[('23', '23% - stawka podstawowa'), ('8', '8% - stawka obniżona I'), ('5', '5% - stawka obniżona II'), ('0', '0% - stawka zerowa'), ('zw', 'zw - zwolniona z VAT'), ('np', 'np - nie podlega VAT'), ('oo', 'oo - odwrotne obciążenie')], default='23', max_length=5, verbose_name='Stawka VAT')),
                ('cena_netto_waluta', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='Cena netto w walucie obcej')),
            ],
            options={
                'verbose_name': 'Pozycja faktury Enhanced',
                'verbose_name_plural': 'Pozycje faktury Enhanced',
                'ordering': ['lp'],
            },
        ),
        migrations.RenameIndex(
            model_name='documentupload',
            new_name='faktury_doc_user_id_b645f2_idx',
            old_name='faktury_documentupload_user_upload_idx',
        ),
        migrations.RenameIndex(
            model_name='documentupload',
            new_name='faktury_doc_process_cd0fbc_idx',
            old_name='faktury_documentupload_status_idx',
        ),
        migrations.RenameIndex(
            model_name='ocrprocessinglog',
            new_name='faktury_ocr_documen_081bd9_idx',
            old_name='faktury_ocrprocessinglog_document_timestamp_idx',
        ),
        migrations.RenameIndex(
            model_name='ocrprocessinglog',
            new_name='faktury_ocr_level_49b430_idx',
            old_name='faktury_ocrprocessinglog_level_idx',
        ),
        migrations.RenameIndex(
            model_name='ocrresult',
            new_name='faktury_ocr_documen_1711e4_idx',
            old_name='faktury_ocrresult_document_idx',
        ),
        migrations.RenameIndex(
            model_name='ocrresult',
            new_name='faktury_ocr_faktura_5ce1ce_idx',
            old_name='faktury_ocrresult_faktura_idx',
        ),
        migrations.RenameIndex(
            model_name='ocrresult',
            new_name='faktury_ocr_created_0d2005_idx',
            old_name='faktury_ocrresult_created_idx',
        ),
        migrations.RenameIndex(
            model_name='ocrresult',
            new_name='faktury_ocr_confide_2fbdc5_idx',
            old_name='faktury_ocrresult_confidence_idx',
        ),
        migrations.RenameIndex(
            model_name='ocrvalidation',
            new_name='faktury_ocr_validat_1f54d0_idx',
            old_name='faktury_ocrvalidation_user_validation_idx',
        ),
        migrations.RenameIndex(
            model_name='ocrvalidation',
            new_name='faktury_ocr_accurac_b2ca30_idx',
            old_name='faktury_ocrvalidation_accuracy_idx',
        ),
        migrations.AddField(
            model_name='enhancedpozycjafaktury',
            name='faktura',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pozycje', to='faktury.enhancedfaktura', verbose_name='Faktura'),
        ),
        migrations.AddField(
            model_name='enhancedfaktura',
            name='dokument_podstawowy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='faktury.enhancedfaktura', verbose_name='Dokument podstawowy (dla korekt)'),
        ),
        migrations.AddField(
            model_name='enhancedfaktura',
            name='nabywca',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faktury_nabywca', to='faktury.kontrahent', verbose_name='Nabywca'),
        ),
        migrations.AddField(
            model_name='enhancedfaktura',
            name='sprzedawca',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faktury_sprzedawca', to='faktury.firma', verbose_name='Sprzedawca'),
        ),
        migrations.AddField(
            model_name='enhancedfaktura',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik'),
        ),
    ]

# Generated by Django 4.2.23 on 2025-08-29 19:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('faktury', '0035_remove_enhancedfaktura_dokument_podstawowy_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataRetentionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(choices=[('audit_logs', 'Logi audytu'), ('user_data', 'Dane użytkowników'), ('invoice_data', 'Dane faktur'), ('ocr_data', 'Dane OCR'), ('session_data', 'Dane sesji'), ('performance_data', 'Dane wydajności'), ('error_logs', 'Logi błędów'), ('backup_data', 'Dane kopii zapasowych'), ('temporary_files', 'Pliki tymczasowe'), ('uploaded_documents', 'Przesłane dokumenty')], help_text='Typ danych objętych polityką', max_length=50, unique=True, verbose_name='Typ danych')),
                ('retention_days', models.PositiveIntegerField(help_text='Liczba dni przechowywania danych', verbose_name='Dni przechowywania')),
                ('auto_cleanup', models.BooleanField(default=True, help_text='Czy dane mają być automatycznie usuwane', verbose_name='Automatyczne czyszczenie')),
                ('archive_before_delete', models.BooleanField(default=False, help_text='Czy dane mają być archiwizowane przed usunięciem', verbose_name='Archiwizuj przed usunięciem')),
                ('legal_hold', models.BooleanField(default=False, help_text='Czy dane są objęte blokadą prawną', verbose_name='Blokada prawna')),
                ('description', models.TextField(blank=True, help_text='Opis polityki przechowywania', verbose_name='Opis')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data aktualizacji')),
            ],
            options={
                'verbose_name': 'Polityka przechowywania danych',
                'verbose_name_plural': 'Polityki przechowywania danych',
                'ordering': ['data_type'],
            },
        ),
        migrations.AlterModelOptions(
            name='accessibilitymetric',
            options={'verbose_name': 'Metryka dostępności', 'verbose_name_plural': 'Metryki dostępności'},
        ),
        migrations.AlterModelOptions(
            name='componentperformancemetric',
            options={'ordering': ['-average_render_time'], 'verbose_name': 'Metryka wydajności komponentu', 'verbose_name_plural': 'Metryki wydajności komponentów'},
        ),
        migrations.AlterModelOptions(
            name='performancemetric',
            options={'ordering': ['-timestamp'], 'verbose_name': 'Metryka wydajności', 'verbose_name_plural': 'Metryki wydajności'},
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='cache_hit_ratio',
            field=models.FloatField(blank=True, help_text='Cache hit ratio (%)', null=True, verbose_name='Współczynnik trafień cache'),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='cpu_usage',
            field=models.FloatField(blank=True, help_text='CPU usage (%)', null=True, verbose_name='Użycie CPU'),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='database_query_time',
            field=models.FloatField(blank=True, help_text='Database query time (seconds)', null=True, verbose_name='Czas zapytań do bazy'),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='memory_usage',
            field=models.FloatField(blank=True, help_text='Memory usage (%)', null=True, verbose_name='Użycie pamięci'),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='page_load_time',
            field=models.FloatField(blank=True, help_text='Total page load time (seconds)', null=True, verbose_name='Czas ładowania strony'),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='response_time',
            field=models.FloatField(blank=True, help_text='Response time (seconds)', null=True, verbose_name='Czas odpowiedzi'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='aria_errors',
            field=models.IntegerField(default=0, verbose_name='Błędy ARIA'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='color_contrast_violations',
            field=models.IntegerField(default=0, verbose_name='Naruszenia kontrastu kolorów'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='focus_trap_errors',
            field=models.IntegerField(default=0, verbose_name='Błędy pułapki fokusu'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='keyboard_navigation_errors',
            field=models.IntegerField(default=0, verbose_name='Błędy nawigacji klawiaturą'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='keyboard_navigation_usage',
            field=models.IntegerField(default=0, verbose_name='Użycie nawigacji klawiaturą'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='lost_focus_count',
            field=models.IntegerField(default=0, verbose_name='Liczba utraconych fokusów'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='missing_labels',
            field=models.IntegerField(default=0, verbose_name='Brakujące etykiety'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='performance_metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accessibility', to='faktury.performancemetric', verbose_name='Metryka wydajności'),
        ),
        migrations.AlterField(
            model_name='accessibilitymetric',
            name='screen_reader_detected',
            field=models.BooleanField(default=False, verbose_name='Wykryto czytnik ekranu'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='average_render_time',
            field=models.FloatField(default=0, verbose_name='Średni czas renderowania'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='component_name',
            field=models.CharField(max_length=100, verbose_name='Nazwa komponentu'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='max_render_time',
            field=models.FloatField(default=0, verbose_name='Maksymalny czas renderowania'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='memory_usage',
            field=models.IntegerField(default=0, verbose_name='Użycie pamięci'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='min_render_time',
            field=models.FloatField(default=0, verbose_name='Minimalny czas renderowania'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='performance_metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='faktury.performancemetric', verbose_name='Metryka wydajności'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='props_changes',
            field=models.IntegerField(default=0, verbose_name='Zmiany właściwości'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='render_count',
            field=models.IntegerField(default=0, verbose_name='Liczba renderowań'),
        ),
        migrations.AlterField(
            model_name='componentperformancemetric',
            name='total_render_time',
            field=models.FloatField(default=0, verbose_name='Całkowity czas renderowania'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='bundle_size',
            field=models.IntegerField(blank=True, null=True, verbose_name='Rozmiar bundle'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='cls',
            field=models.FloatField(blank=True, help_text='Cumulative Layout Shift', null=True, verbose_name='CLS'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='component_render_time',
            field=models.FloatField(blank=True, null=True, verbose_name='Czas renderowania komponentów'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='css_load_time',
            field=models.FloatField(blank=True, null=True, verbose_name='Czas ładowania CSS'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='fcp',
            field=models.FloatField(blank=True, help_text='First Contentful Paint (ms)', null=True, verbose_name='FCP'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='fid',
            field=models.FloatField(blank=True, help_text='First Input Delay (ms)', null=True, verbose_name='FID'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='lcp',
            field=models.FloatField(blank=True, help_text='Largest Contentful Paint (ms)', null=True, verbose_name='LCP'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='raw_data',
            field=models.JSONField(blank=True, default=dict, verbose_name='Surowe dane'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='session_id',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='ID sesji'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='theme_load_time',
            field=models.FloatField(blank=True, null=True, verbose_name='Czas ładowania motywu'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='timestamp',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Znacznik czasu'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='ttfb',
            field=models.FloatField(blank=True, help_text='Time to First Byte (ms)', null=True, verbose_name='TTFB'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='url',
            field=models.URLField(max_length=500, verbose_name='URL'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik'),
        ),
        migrations.AlterField(
            model_name='performancemetric',
            name='user_agent',
            field=models.TextField(verbose_name='User Agent'),
        ),
        migrations.CreateModel(
            name='SystemHealthMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Znacznik czasu')),
                ('component', models.CharField(max_length=50, verbose_name='Komponent')),
                ('status', models.CharField(choices=[('healthy', 'Zdrowy'), ('warning', 'Ostrzeżenie'), ('critical', 'Krytyczny'), ('down', 'Niedostępny')], max_length=20, verbose_name='Status')),
                ('response_time', models.FloatField(verbose_name='Czas odpowiedzi')),
                ('error_count', models.IntegerField(default=0, verbose_name='Liczba błędów')),
                ('cpu_usage', models.FloatField(blank=True, null=True, verbose_name='Użycie CPU')),
                ('memory_usage', models.FloatField(blank=True, null=True, verbose_name='Użycie pamięci')),
                ('disk_usage', models.FloatField(blank=True, null=True, verbose_name='Użycie dysku')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadane')),
            ],
            options={
                'verbose_name': 'Metryka zdrowia systemu',
                'verbose_name_plural': 'Metryki zdrowia systemu',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['component', '-timestamp'], name='faktury_sys_compone_4cc857_idx'), models.Index(fields=['status'], name='faktury_sys_status_cee25e_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nazwa ustawienia bezpieczeństwa', max_length=100, unique=True, verbose_name='Nazwa')),
                ('config_type', models.CharField(choices=[('password_policy', 'Polityka haseł'), ('session_timeout', 'Timeout sesji'), ('rate_limiting', 'Ograniczenia żądań'), ('ip_whitelist', 'Biała lista IP'), ('ip_blacklist', 'Czarna lista IP'), ('encryption_settings', 'Ustawienia szyfrowania'), ('audit_settings', 'Ustawienia audytu'), ('compliance_settings', 'Ustawienia zgodności'), ('notification_settings', 'Ustawienia powiadomień'), ('backup_settings', 'Ustawienia kopii zapasowych')], help_text='Typ konfiguracji bezpieczeństwa', max_length=50, verbose_name='Typ konfiguracji')),
                ('value', models.JSONField(help_text='Wartość konfiguracji (JSON)', verbose_name='Wartość')),
                ('is_active', models.BooleanField(default=True, help_text='Czy ustawienie jest aktywne', verbose_name='Aktywne')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data aktualizacji')),
                ('description', models.TextField(blank=True, help_text='Opis konfiguracji bezpieczeństwa', verbose_name='Opis')),
                ('created_by', models.ForeignKey(blank=True, help_text='Użytkownik, który utworzył konfigurację', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utworzone przez')),
            ],
            options={
                'verbose_name': 'Konfiguracja bezpieczeństwa',
                'verbose_name_plural': 'Konfiguracje bezpieczeństwa',
                'ordering': ['config_type', 'name'],
                'indexes': [models.Index(fields=['config_type', 'is_active'], name='faktury_sec_config__0cd644_idx'), models.Index(fields=['name'], name='faktury_sec_name_6fe824_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Logowanie'), ('logout', 'Wylogowanie'), ('login_failed', 'Nieudane logowanie'), ('password_change', 'Zmiana hasła'), ('password_reset', 'Reset hasła'), ('profile_update', 'Aktualizacja profilu'), ('company_create', 'Utworzenie firmy'), ('company_update', 'Aktualizacja firmy'), ('company_delete', 'Usunięcie firmy'), ('invoice_create', 'Utworzenie faktury'), ('invoice_update', 'Aktualizacja faktury'), ('invoice_delete', 'Usunięcie faktury'), ('invoice_view', 'Wyświetlenie faktury'), ('invoice_export', 'Eksport faktury'), ('ocr_upload', 'Przesłanie dokumentu OCR'), ('ocr_process', 'Przetwarzanie OCR'), ('ocr_validate', 'Walidacja OCR'), ('data_export', 'Eksport danych'), ('data_import', 'Import danych'), ('admin_access', 'Dostęp do panelu admin'), ('api_access', 'Dostęp do API'), ('file_upload', 'Przesłanie pliku'), ('file_download', 'Pobranie pliku'), ('file_delete', 'Usunięcie pliku'), ('permission_change', 'Zmiana uprawnień'), ('security_violation', 'Naruszenie bezpieczeństwa'), ('suspicious_activity', 'Podejrzana aktywność'), ('rate_limit_exceeded', 'Przekroczenie limitu żądań'), ('unauthorized_access', 'Nieautoryzowany dostęp'), ('data_breach_attempt', 'Próba naruszenia danych'), ('system_maintenance', 'Konserwacja systemu'), ('backup_create', 'Utworzenie kopii zapasowej'), ('backup_restore', 'Przywrócenie kopii zapasowej')], help_text='Typ wykonywanej akcji', max_length=50, verbose_name='Akcja')),
                ('resource_type', models.CharField(choices=[('user', 'Użytkownik'), ('company', 'Firma'), ('invoice', 'Faktura'), ('contractor', 'Kontrahent'), ('product', 'Produkt'), ('document', 'Dokument'), ('ocr_result', 'Wynik OCR'), ('partnership', 'Partnerstwo'), ('team', 'Zespół'), ('message', 'Wiadomość'), ('task', 'Zadanie'), ('system', 'System'), ('api', 'API'), ('file', 'Plik'), ('session', 'Sesja'), ('permission', 'Uprawnienie'), ('audit_log', 'Log audytu'), ('backup', 'Kopia zapasowa')], help_text='Typ zasobu, na którym wykonywana jest akcja', max_length=50, verbose_name='Typ zasobu')),
                ('resource_id', models.CharField(blank=True, help_text='Identyfikator konkretnego zasobu', max_length=100, null=True, verbose_name='ID zasobu')),
                ('encrypted_details', models.TextField(blank=True, help_text='Dodatkowe szczegóły akcji (zaszyfrowane)', null=True, verbose_name='Zaszyfrowane szczegóły')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Adres IP użytkownika', null=True, verbose_name='Adres IP')),
                ('user_agent', models.TextField(blank=True, help_text='Informacje o przeglądarce użytkownika', null=True, verbose_name='User Agent')),
                ('success', models.BooleanField(default=True, help_text='Czy akcja zakończyła się sukcesem', verbose_name='Sukces')),
                ('error_message', models.TextField(blank=True, help_text='Komunikat błędu w przypadku niepowodzenia', null=True, verbose_name='Komunikat błędu')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Czas wykonania akcji', verbose_name='Znacznik czasu')),
                ('session_key', models.CharField(blank=True, help_text='Klucz sesji użytkownika', max_length=40, null=True, verbose_name='Klucz sesji')),
                ('risk_level', models.CharField(choices=[('low', 'Niskie'), ('medium', 'Średnie'), ('high', 'Wysokie'), ('critical', 'Krytyczne')], default='low', help_text='Poziom ryzyka bezpieczeństwa dla tej akcji', max_length=20, verbose_name='Poziom ryzyka')),
                ('company', models.ForeignKey(blank=True, help_text='Firma w kontekście której wykonywana jest akcja', null=True, on_delete=django.db.models.deletion.SET_NULL, to='faktury.firma', verbose_name='Firma')),
                ('user', models.ForeignKey(blank=True, help_text='Użytkownik wykonujący akcję (null dla akcji anonimowych)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Log audytu bezpieczeństwa',
                'verbose_name_plural': 'Logi audytu bezpieczeństwa',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='faktury_sec_user_id_f24b79_idx'), models.Index(fields=['action', '-timestamp'], name='faktury_sec_action_d6fc15_idx'), models.Index(fields=['resource_type', 'resource_id'], name='faktury_sec_resourc_58f7f0_idx'), models.Index(fields=['ip_address', '-timestamp'], name='faktury_sec_ip_addr_dde022_idx'), models.Index(fields=['success', '-timestamp'], name='faktury_sec_success_c44dd5_idx'), models.Index(fields=['risk_level', '-timestamp'], name='faktury_sec_risk_le_45fc1b_idx'), models.Index(fields=['company', '-timestamp'], name='faktury_sec_company_f89993_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('gdpr_audit', 'Audyt GDPR'), ('security_audit', 'Audyt bezpieczeństwa'), ('data_retention', 'Przechowywanie danych'), ('access_control', 'Kontrola dostępu'), ('encryption_status', 'Status szyfrowania'), ('backup_verification', 'Weryfikacja kopii zapasowych'), ('incident_report', 'Raport incydentu'), ('vulnerability_assessment', 'Ocena podatności'), ('penetration_test', 'Test penetracyjny'), ('compliance_check', 'Sprawdzenie zgodności')], help_text='Typ raportu zgodności', max_length=50, verbose_name='Typ raportu')),
                ('title', models.CharField(help_text='Tytuł raportu', max_length=200, verbose_name='Tytuł')),
                ('description', models.TextField(help_text='Opis raportu zgodności', verbose_name='Opis')),
                ('findings', models.JSONField(help_text='Szczegółowe ustalenia raportu (JSON)', verbose_name='Ustalenia')),
                ('recommendations', models.TextField(blank=True, help_text='Rekomendacje wynikające z raportu', verbose_name='Rekomendacje')),
                ('compliance_status', models.CharField(choices=[('compliant', 'Zgodny'), ('non_compliant', 'Niezgodny'), ('partial', 'Częściowo zgodny'), ('under_review', 'W trakcie przeglądu')], default='under_review', help_text='Status zgodności na podstawie raportu', max_length=20, verbose_name='Status zgodności')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='Data przeglądu raportu', null=True, verbose_name='Data przeglądu')),
                ('created_by', models.ForeignKey(blank=True, help_text='Użytkownik, który utworzył raport', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utworzony przez')),
                ('reviewed_by', models.ForeignKey(blank=True, help_text='Użytkownik, który przejrzał raport', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_compliance_reports', to=settings.AUTH_USER_MODEL, verbose_name='Przejrzane przez')),
            ],
            options={
                'verbose_name': 'Raport zgodności',
                'verbose_name_plural': 'Raporty zgodności',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report_type', '-created_at'], name='faktury_com_report__5ef669_idx'), models.Index(fields=['compliance_status'], name='faktury_com_complia_597963_idx')],
            },
        ),
    ]

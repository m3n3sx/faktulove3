(function() {'use strict'; const FallbackDemo = {demoAssets: ['assets/js/lib/jquery-3.7.1.min.js', 'assets/js/lib/bootstrap.bundle.min.js', 'assets/js/lib/apexcharts.min.js', 'assets/js/lib/dataTables.min.js'], runDemo: function() {console.log('=== CDN Fallback System Demo ==='); this.checkSystemAvailability(); this.demonstrateAssetTesting(); this.demonstrateFailureSimulation(); this.showUsageExamples()}, checkSystemAvailability: function() {console.log('\n1. System Availability Check:'); if (typeof window.CDNFallback !== 'undefined') {console.log('✅ CDN Fallback system is loaded and available'); console.log('✅ Available methods:', Object.keys(window.CDNFallback))}else {console.log('❌ CDN Fallback system not available'); return}if (typeof window.FallbackTester !== 'undefined') {console.log('✅ Fallback testing utilities available')}else {console.log('⚠️ Fallback testing utilities not loaded')}}, demonstrateAssetTesting: function() {console.log('\n2. Asset Testing Demonstration:'); const libraries = {'jQuery': () => typeof jQuery !== 'undefined' || typeof $ !== 'undefined', 'Bootstrap': () => typeof bootstrap !== 'undefined', 'ApexCharts': () => typeof ApexCharts !== 'undefined', 'DataTables': () => typeof $ !== 'undefined' && typeof $.fn.DataTable !== 'undefined' }; Object.entries(libraries).forEach(([name, test]) => {const available = test(); const status = available ? '✅' : '❌'; console.log(`${status}${name}: ${available ? 'Available' : 'Not Available'}`)})}, demonstrateFailureSimulation: function() {console.log('\n3. Failure Simulation (Safe Demo):'); console.log('The system can simulate asset failures for testing:'); console.log('- window.CDNFallback.simulateFailure("assets/js/lib/jquery-3.7.1.min.js")'); console.log('- This will trigger the fallback mechanism'); console.log('- Fallback will load the asset from CDN'); console.log('- User will be notified if it\'s a critical asset')}, showUsageExamples: function() {console.log('\n4. Usage Examples:'); console.log('\n console.log('const status = window.CDNFallback.getStatus();'); console.log('console.log(status);'); if (window.CDNFallback) {const status = window.CDNFallback.getStatus(); console.log('Current status:', status)}console.log('\n console.log('window.CDNFallback.loadAsset("assets/js/lib/apexcharts.min.js")'); console.log(' .then(() => console.log("Asset loaded"))'); console.log(' .catch(err => console.error("Failed:", err));'); console.log('\n console.log('window.FallbackTester.runTestSuite();')}, createDemoUI: function() {const demoContainer = document.createElement('div'); demoContainer.id = 'fallback-demo'; demoContainer.style.cssText = ` position: fixed; top: 10px; left: 10px; background: #f8f9fa; border: 2px solid #007bff; border-radius: 8px; padding: 15px; z-index: 10001; max-width: 350px; font-family: monospace; font-size: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); `; let html = ` <h5 style="margin: 0 0 10px 0; color: #007bff;">CDN Fallback Demo</h5> <button onclick="this.parentNode.remove()" style="float: right; background: #dc3545; color: white; border: none; border-radius: 4px; padding: 4px 8px; cursor: pointer; margin-top: -25px;">×</button> <div style="margin: 10px 0;"> <button onclick="FallbackDemo.runDemo()" style="background: #28a745; color: white; border: none; border-radius: 4px; padding: 6px 12px; cursor: pointer; margin: 2px;">Run Demo</button> <button onclick="window.FallbackTester && window.FallbackTester.runTestSuite()" style="background: #17a2b8; color: white; border: none; border-radius: 4px; padding: 6px 12px; cursor: pointer; margin: 2px;">Test Suite</button> </div> <div style="margin: 10px 0; font-size: 11px;"> <div>System Status:</div> <div id="demo-status">Checking...</div> </div> `; demoContainer.innerHTML = html; document.body.appendChild(demoContainer); setTimeout(() => {const statusDiv = document.getElementById('demo-status'); if (statusDiv) {const systemAvailable = typeof window.CDNFallback !== 'undefined'; const testerAvailable = typeof window.FallbackTester !== 'undefined'; statusDiv.innerHTML = ` <div style="color: ${systemAvailable ? 'green' : 'red'};"> ${systemAvailable ? '✅' : '❌'}CDN Fallback System </div> <div style="color: ${testerAvailable ? 'green' : 'orange'};"> ${testerAvailable ? '✅' : '⚠️'}Testing Utilities </div> `}}, 500)}}; if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {document.addEventListener('DOMContentLoaded', function() {setTimeout(() => {FallbackDemo.createDemoUI()}, 2000)})}window.FallbackDemo = FallbackDemo; setTimeout(() => {if (console && console.log) {console.log('%c CDN Fallback System Loaded ', 'background: #007bff; color: white; padding: 4px 8px; border-radius: 4px;'); console.log('Run FallbackDemo.runDemo() to see a demonstration')}}, 1000)})();